apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: metrics-api
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/part-of: kube-prometheus
    app.kubernetes.io/version: 0.7.2
  name: metrics-server
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: metrics-api
      app.kubernetes.io/name: metrics-server
      app.kubernetes.io/part-of: kube-prometheus
  template:
    metadata:
      labels:
        app.kubernetes.io/component: metrics-api
        app.kubernetes.io/name: metrics-server
        app.kubernetes.io/part-of: kube-prometheus
        app.kubernetes.io/version: 0.7.2
    spec:
      containers:
      - args:
        - --cert-dir=/certs
        - --secure-port=4443
        - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
        - --kubelet-use-node-status-port
        - --metric-resolution=15s
        - --kubelet-insecure-tls
        image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
        name: metrics-server
        ports:
        - containerPort: 4443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - mountPath: /certs
          name: certs
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: metrics-server
      volumes:
      - emptyDir: {}
        name: certs
